name: Python Application

on:
  push:
    branches: [ "main","i200983","i200977","i190600" ]
  pull_request:
    branches: [ "main","i200983","i200977","i190600" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Setup DVC
      uses: iterative/setup-dvc@v1
    
    - name: Setup Google Drive credentials
      env:
        GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
        GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_LINK}}
        GDRIVE_SERVICE_ACCOUNT_JSON: ${{ secrets.GDRIVE_API }}
      run: |
        echo "$GDRIVE_SERVICE_ACCOUNT_JSON" > dvc-remote-connections.json
        dvc remote modify storage gdrive_client_id $GDRIVE_CLIENT_ID
        dvc remote modify storage gdrive_client_secret $GDRIVE_CLIENT_SECRET
        dvc remote modify storage gdrive_service_account_json_file_path dvc-remote-connections.json

    - name: Pull Data from DVC
      run: |
        dvc pull
    - name: Add More Data to DVC    
      run: |
        python random_data.py
        dvc add dummy_sensor_data.csv
    - name: Push data back to gdrive
      run: 'dvc push -r storage'
    - name: Execute Mlflow training and Data Gather
      run: |
        export MLFLOW_TRACKING_URI=${{secrets.MLFLOW_TRACKING_URI}}
        export MLFLOW_TRACKING_USERNAME=${{secrets.MLFLOW_TRACKING_USERNAME}}
        export MLFLOW_TRACKING_PASSWORD=${{secrets.MLFLOW_TRACKING_PASSWORD}}
        python main.py
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker Image
      run: docker build . --file Dockerfile --tag fahadkamran2001/random-forest-app:latest
    - name: Push Docker Image
      run: |
        docker login -u fahadkamran2001 -p ${{ secrets.DOCKER_PASSWORD }}
        docker push fahadkamran2001/random-forest-app:latest
    - name: Concept Drift Monitoring (Re-train if necessary)
      run: |
        export MLFLOW_TRACKING_URI=${{secrets.MLFLOW_TRACKING_URI}}
        export MLFLOW_TRACKING_USERNAME=${{secrets.MLFLOW_TRACKING_USERNAME}}
        export MLFLOW_TRACKING_PASSWORD=${{secrets.MLFLOW_TRACKING_PASSWORD}}
        python monitor.py
    - name: Conditionally Run - Execute Mlflow training and Data Gather
      if: steps.python-step.outputs.condition_result == 'true'
      run: |
        export MLFLOW_TRACKING_URI=${{secrets.MLFLOW_TRACKING_URI}}
        export MLFLOW_TRACKING_USERNAME=${{secrets.MLFLOW_TRACKING_USERNAME}}
        export MLFLOW_TRACKING_PASSWORD=${{secrets.MLFLOW_TRACKING_PASSWORD}}
        python main.py
    - name: Conditionally Run - Login to Docker
      if: steps.python-step.outputs.condition_result == 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Conditionally Run - Build Docker Image
      if: steps.python-step.outputs.condition_result == 'true'
      run: docker build . --file Dockerfile --tag fahadkamran2001/random-forest-app:latest
    - name: Conditionally Run - Push Docker Image
      if: steps.python-step.outputs.condition_result == 'true'
      run: |
        docker login -u fahadkamran2001 -p ${{ secrets.DOCKER_PASSWORD }}
        docker push fahadkamran2001/random-forest-app:latest 


      
